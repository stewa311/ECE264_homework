==9064== Memcheck, a memory error detector
==9064== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==9064== Using Valgrind-3.15.0-608cb11914-20190413 and LibVEX; rerun with -h for copyright info
==9064== Command: ./hw17 inputs/input5
==9064== Parent PID: 9062
==9064== 
--9064-- 
--9064-- Valgrind options:
--9064--    --tool=memcheck
--9064--    --log-file=vallog
--9064--    --leak-check=full
--9064--    --verbose
--9064-- Contents of /proc/version:
--9064--   Linux version 3.10.0-1127.8.2.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Tue May 12 16:57:42 UTC 2020
--9064-- 
--9064-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-lzcnt-rdtscp-sse3-ssse3-avx-avx2-bmi-f16c-rdrand
--9064-- Page sizes: currently 4096, max supported 4096
--9064-- Valgrind library directory: /usr/libexec/valgrind
--9064-- Reading syms from /home/shay/a/stewa311/Desktop/ECE264/problems/MySolutions/HW17Huffman1/hw17
--9064-- Reading syms from /usr/lib64/ld-2.17.so
--9064--   Considering /usr/lib/debug/usr/lib64/ld-2.17.so.debug ..
--9064--   .. CRC mismatch (computed 3bbc9605 wanted f687b9f7)
--9064-- Reading syms from /usr/libexec/valgrind/memcheck-amd64-linux
--9064--    object doesn't have a symbol table
--9064--    object doesn't have a dynamic symbol table
--9064-- Scheduler: using generic scheduler lock implementation.
--9064-- Reading suppressions file: /usr/libexec/valgrind/default.supp
==9064== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-9064-by-stewa311-on-ecegrid-thin7.ecn.purdue.edu
==9064== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-9064-by-stewa311-on-ecegrid-thin7.ecn.purdue.edu
==9064== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-9064-by-stewa311-on-ecegrid-thin7.ecn.purdue.edu
==9064== 
==9064== TO CONTROL THIS PROCESS USING vgdb (which you probably
==9064== don't want to do, unless you know exactly what you're doing,
==9064== or are doing some strange experiment):
==9064==   /usr/libexec/valgrind/../../bin/vgdb --pid=9064 ...command...
==9064== 
==9064== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==9064==   /path/to/gdb ./hw17
==9064== and then give GDB the following command
==9064==   target remote | /usr/libexec/valgrind/../../bin/vgdb --pid=9064
==9064== --pid is optional if only one valgrind process is running
==9064== 
--9064-- REDIR: 0x4019e40 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c7ed5 (???)
--9064-- REDIR: 0x4019c10 (ld-linux-x86-64.so.2:index) redirected to 0x580c7eef (???)
--9064-- Reading syms from /usr/libexec/valgrind/vgpreload_core-amd64-linux.so
--9064-- Reading syms from /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so
==9064== WARNING: new redirection conflicts with existing -- ignoring it
--9064--     old: 0x04019e40 (strlen              ) R-> (0000.0) 0x580c7ed5 ???
--9064--     new: 0x04019e40 (strlen              ) R-> (2007.0) 0x04c2d1b0 strlen
--9064-- REDIR: 0x4019dc0 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4c2e300 (strcmp)
--9064-- REDIR: 0x401aa80 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x4c31f90 (mempcpy)
--9064-- Reading syms from /usr/lib64/libc-2.17.so
--9064--   Considering /usr/lib/debug/usr/lib64/libc-2.17.so.debug ..
--9064--   .. CRC mismatch (computed b39ec7be wanted 3177c6f6)
--9064-- REDIR: 0x4ec7130 (libc.so.6:strcasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4ec3eb0 (libc.so.6:strnlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4ec9400 (libc.so.6:strncasecmp) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4ec6910 (libc.so.6:memset) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4ec68c0 (libc.so.6:memcpy@GLIBC_2.2.5) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4ec58a0 (libc.so.6:__GI_strrchr) redirected to 0x4c2cb70 (__GI_strrchr)
--9064-- REDIR: 0x4ebc6b0 (libc.so.6:malloc) redirected to 0x4c29eec (malloc)
--9064-- REDIR: 0x4edc920 (libc.so.6:__GI_strstr) redirected to 0x4c32220 (__strstr_sse2)
--9064-- REDIR: 0x4ebd0d0 (libc.so.6:calloc) redirected to 0x4c2bff3 (calloc)
--9064-- REDIR: 0x4ecbb40 (libc.so.6:__GI_memcpy) redirected to 0x4c2efb0 (__GI_memcpy)
--9064-- REDIR: 0x4ebcad0 (libc.so.6:free) redirected to 0x4c2afe6 (free)
--9064-- REDIR: 0x4ecd3c0 (libc.so.6:strchrnul) redirected to 0x4c31ab0 (strchrnul)
--9064-- REDIR: 0x4ec6ae0 (libc.so.6:__GI_mempcpy) redirected to 0x4c31cc0 (__GI_mempcpy)
--9064-- REDIR: 0x4ec3d80 (libc.so.6:strlen) redirected to 0x4a247a0 (_vgnU_ifunc_wrapper)
--9064-- REDIR: 0x4fa6710 (libc.so.6:__strlen_sse2_pminub) redirected to 0x4c2d0f0 (strlen)
==9064== 
==9064== HEAP SUMMARY:
==9064==     in use at exit: 672 bytes in 24 blocks
==9064==   total heap usage: 72 allocs, 48 frees, 2,565 bytes allocated
==9064== 
==9064== Searching for pointers to 24 not-freed blocks
==9064== Checked 70,096 bytes
==9064== 
==9064== 672 (32 direct, 640 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3
==9064==    at 0x4C29F73: malloc (vg_replace_malloc.c:309)
==9064==    by 0x4008F1: push (main.c:46)
==9064==    by 0x400DD4: main (main.c:220)
==9064== 
==9064== LEAK SUMMARY:
==9064==    definitely lost: 32 bytes in 1 blocks
==9064==    indirectly lost: 640 bytes in 23 blocks
==9064==      possibly lost: 0 bytes in 0 blocks
==9064==    still reachable: 0 bytes in 0 blocks
==9064==         suppressed: 0 bytes in 0 blocks
==9064== 
==9064== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
